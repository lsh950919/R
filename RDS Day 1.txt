R for Data Analysis Day 1

Instructor: Kevin Na, blog: mrkevinna.github.io, email: drkevin2022@gmail.com

EDA - Exploratory Data Analysis (탐색적 데이터 분석)
RPA - Robitics Process Automization - automating repetitive process
CRAN - Comprehensive R Archive Network - library for packages for R, goes through inspection and is updated automatically
IDE - Integrated Development Environment

Object names have to start with an alphabet, but using `` we can make it start with number
 - this may have usage when column names for some data are years (2008, 2009, etc.) and must become an object

In order to make a number an integer instead of float/double, L must be added at the end (1L, 2L, 3L), otherwise it will be assigned as a double
 - this is used when an input HAS to be in integer form

if we have objects a and b, it can be combined into one vector using c = c(a, b)

5 data types:
Vectors - 1D, contains single class
 - every item is of same class, if added value is not of same class, they are converted
Matrices - 2D, contains single class
Arrays - 3D, contains single class
Data Frames - 2D, can contain multiple classes
Lists - 1D, can contain every single data type (arrays, data frames, etc.)
 - vectors, matrices, and arrays are called tensors



New Commands:

install.packages(package name) - installing a package by writing code ('tidyverse', etc.)

library(remote)/install_github(repo = 'github_user_name/package name') - installing a package in github

<- / = - assignment (<- can be written with alt + -)

class(object) - gives type of obejct input

length(object) - gives number of items in the object
nchar(object) - gives the length of each item in object
 - for a vector, length gives count of items inside the object (1 if it has a string)
 - ex. if object sen = 'Hello World!', length(sen) = 1, nchar(sen) = 12
   if object names = c('Adam', 'Ben', 'Charlie'), length(names) = 3, nchar(names) = 4 3 7

seq(1, 10, 2.5) = 1.0, 3.5, 6.0, 8.5 - for range 1 to 10, give numbers in 2.5 increments
seq(1, 10, length.out = 19) = 1.0, 1.5, ..., 10.0 - gives numbers in range 1 to 10 where there are a total of 19 numbers
 - to find how much weight we have to lose everyday from 80kg to 60kg for a year, seq(80, 60, length.out = 365)

rep(1:3, times = 5) = 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 - repeats range five times
rep(1:3, each = 5) = 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 - repeats first item five times, second five times, and so on
rep_len(1:3, length.out = 10) = 1 2 3 1 2 3 1 2 3 1 - repeats until count is 10
 - might be useful when we want to end the repetition in the middle of the vector/list

letters & LETTERS - all alphabets lower/uppercase
 - class(letters/LETTERS) = char, length(letters/LETTERS) = 26, nchar(letters/LETTERS) = 1 1 .... 1 (26 1's)

FOR COMMANDS BELOW, terms = c('I', 'am', 'a', 'girl')
paste('I', 'am', 'a', 'girl', sep = ' ') = 'I am a girl' - combines all strings with space inbetween
paste(terms, collapse = ' ') = 'I am a girl' - combines all strings inside vector with space inbetween
 - if we give an object instead of a list of strings, we need to use collapse command instead of sep


grep('a', terms) = 2 3 - gives index numbers of items inside terms that contains 'a'
grepl('a', terms) = F T T F - gives boolean for containing 'a' for each item inside terms
grep('a', terms, value = T/F) = 'am' 'a'/'I' 'girl' - gives items that satisfy value inside terms

gsub('a', 'b', terms) = 'I' 'bm' 'b' 'girl' - replaces all 'a' in terms with 'b' and gives the full vector



